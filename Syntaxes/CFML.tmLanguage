<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string></string>
	</array>
	<key>foldingStartMarker</key>
	<string>(^.*{[^}]*$|^.*\([^\)]*$|^.*/\*(?!.*\*/).*$)</string>
	<key>foldingStopMarker</key>
	<string>(^\s*\}|^\s*\)|^(?!.*/\*).*\*/)</string>
	<key>name</key>
	<string>CFML</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.cfml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.cfml</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(function)\s+([a-zA-Z_$]\w*)?\s*\((.*?)\)</string>
			<key>name</key>
			<string>meta.function.cfml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>//.*$\n?</string>
			<key>name</key>
			<string>comment.line.double-slash.cfml</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.cfml</string>
			<key>swallow</key>
			<string>\\.</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(if|while|for|return|else)\b</string>
			<key>name</key>
			<string>keyword.control.cfml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>=|\+|\-|\*|\/|\^|\&amp;|\b(?i:mod|not|and|or|xor|eqv|imp|is|eq|neq|gt|ge|gte|lt|le|lte|contains|does not contain)\b</string>
			<key>name</key>
			<string>keyword.operator.cfml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;!cfdump\s)\b(var)\b</string>
			<key>name</key>
			<string>storage.type.var</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(false|null|true)\b</string>
			<key>name</key>
			<string>constant.language.cfml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b</string>
			<key>name</key>
			<string>constant.numeric.cfml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;=\.)(?i:CurrentRow|RecordCount|ColumnList)\b</string>
			<key>name</key>
			<string>support.constant.cfml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:Form|Session|Application|Server|Client|Request|CGI|URL|Variables|Arguments)\b</string>
			<key>name</key>
			<string>variable.language.cfml.scope</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#cfmx-functions</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(GetK2ServerDocCount(Limit)?|IsK2Server(OnLine|DocCountExceeded|ABroker)|ParameterExists))\b</string>
			<key>name</key>
			<string>invalid.deprecated.cfml</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(Is(Protected|Auth(orized|enticated))|Authenticated(Context|User)))\b</string>
			<key>name</key>
			<string>invalid.illegal.cfml</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>cfmx-functions</key>
		<dict>
			<key>match</key>
			<string>(?x)
\b(?i:(R(ight|ound|Trim|e(p(eatString|lace(NoCase|List)?)|verse|leaseComObject|moveChars)|Justify|E(Replace(NoCase)?|Match(NoCase)?|Find(NoCase)?)|and(Range|omize)?)|Ge(nerateSecretKey|t(ReadableImageFormats|GatewayHelper|Met(aData|ricData)|BaseT(emplatePath|ag(Data|List))|SOAPRe(sponse(Header)?|quest(Header)?)|Http(RequestData|TimeString)|C(o(ntextRoot|mponentMetaData)|urrentTemplatePath|lientVariablesList)|T(i(ckCount|meZoneInfo)|oken|emp(Directory|latePath|File))|DirectoryFromPath|UserRoles|P(ageContext|r(interInfo|ofileS(tring|ections)))|E(ncoding|xception)|F(ile(Info|FromPath)|unctionList)|WriteableImageFormats|Local(HostIP|e(DisplayName)?)|AuthUser))|Xml(GetNodeType|Search|New|ChildPos|Transform|Parse|ElemNew|Validate|Format)|M(i(n(ute)?|d)|onth(AsString)?|ax)|Bi(nary(Decode|Encode)|t(Xor|Mask(Read|Set|Clear)|SH(RN|LN)|Not|Or|And))|S(tr(ipCR|uct(Get|Sort|New|C(o(unt|py)|lear)|I(sEmpty|nsert)|Delete|Update|Key(Exists|List|Array)|Find(Value|Key)?|Append))|in|pan(Including|Excluding)|e(ndGatewayMessage|cond|t(ProfileString|Encoding|Variable|Locale)|rializeJSON)|qr|leep|gn)|H(our|TML(CodeFormat|EditFormat)|ash)|Ye(sNoFormat|ar)|N(ow|umberFormat)|C(h(arset(Decode|Encode)|r)|o(s|mpare(NoCase)?)|eiling|Justify|reate(Time(Span)?|O(DBC(Time|Date(Time)?)|bject)|Date(Time)?|UUID))|T(imeFormat|o(B(inary|ase64)|S(cript|tring))|an|rim)|I(s(X(ML|ml(Root|Node|Doc|Elem|Attribute))|B(inary|oolean)|S(truct|impleValue|OAPRequest)|Numeric(Date)?|CustomFunction|I(nstanceOf|mage(File)?)|Object|D(e(fined|bugMode)|DX|ate)|User(In(Role|AnyRole)|LoggedIn)|JSON|PDF(Object|File)|Valid|Query|WDDX|L(ocalHost|eapYear)|Array)|n(sert|crementValue|t|putBaseN)|If|mage(R(otate(DrawingAxis)?|e(size|ad(Base64)?))|G(et(B(ufferedImage|lob)|Height|IPTC(Metadata|Tag)|EXIF(Metadata|Tag)|Width)|rayscale)|XORDrawingMode|Blur|S(h(ear(DrawingAxis)?|arpen)|caleToFit|et(BackgroundColor|Drawing(Stroke|Color|Transparency)|Antialiasing))|Ne(w|gative)|C(opy|learRect|rop)|Translate(DrawingAxis)?|Info|Overlay|Draw(R(oundRect|ect)|BeveledRect|CubicCurve|Text|Oval|Point|QuadraticCurve|Line(s)?|Arc)|Paste|Flip|Write(Base64)?|AddBorder))|D(irectoryExists|o(tNetToCFType|llarFormat)|uplicate|e(serializeJSON|c(imalFormat|r(ypt(Binary)?|ementValue))|leteClientVariable)|E|a(y(sIn(Month|Year)|Of(Year|Week(AsString)?))?|te(Co(nvert|mpare)|Diff|Part|Format|Add)))|U(RL(SessionFormat|Decode|EncodedFormat)|Case)|J(SStringFormat|avaCast)|P(i|ar(seDateTime|agraphFormat)|re(serveSingleQuotes|cisionEvaluate))|E(ncrypt(Binary)?|valuate|xp(andPath)?)|V(erifyClient|al(ueList)?)|Qu(otedValueList|ery(SetCell|New|ConvertForGrid|Add(Row|Column))|arter)|F(i(nd(NoCase|OneOf)?|le(Read(Binary|Line)?|Move|Set(LastModified|A(ccessMode|ttribute))|C(opy|lose)|IsEOF|Open|Delete|Exists|Write(Line)?)|rstDayOfMonth|x)|ormatBaseN)|W(eek|r(iteOutput|ap))|L(S(NumberFormat|CurrencyFormat|TimeFormat|Is(Numeric|Currency|Date)|DateFormat|Parse(Number|Currency|DateTime|EuroCurrency)|EuroCurrencyFormat)|ist(Rest|GetAt|S(ort|etAt)|C(hangeDelims|ontains(NoCase)?)|ToArray|InsertAt|DeleteAt|Prepend|ValueCount(NoCase)?|Qualify|Fi(nd(NoCase)?|rst)|L(en|ast)|Append)|og(10)?|Case|Trim|e(n|ft)|Justify)|A(sc|tn|Sin|ddSOAPRe(sponseHeader|questHeader)|Cos|jax(OnLoad|Link)|rray(Resize|M(in|ax)|S(ort|um|et|wap)|New|Clear|ToList|I(s(Defined|Empty)|nsertAt)|DeleteAt|Prepend|Len|A(ppend|vg))|bs)))\b</string>
			<key>name</key>
			<string>support.function.cfml</string>
		</dict>
		<key>interpolated-cfmx</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>#(?=.*?#)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.cfml.embedded.line.html</string>
					<key>end</key>
					<string>#</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>string-double-quoted</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolated-cfmx</string>
				</dict>
			</array>
		</dict>
		<key>string-single-quoted</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolated-cfmx</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string-double-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-single-quoted</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.cfml</string>
	<key>uuid</key>
	<string>93D17B74-60FA-4070-86C8-CE0F6141130F</string>
</dict>
</plist>
